[
  {
    "id": 1,
    "text": "全体集合S内に異なる部分集合AとBがあるとき，A‾∩B‾に等しいものはどれか。ここで，A∪BはAとBの和集合，A∩BはAとBの積集合，AはSにおけるAの補集合，A－BはAからBを除いた差集合を表す。",
    "count": 3,
    "choice": ["A‾－B", "(A‾∪B‾)－(A∩B)", "(S－A)∪(S－B)", "S－(A∩B)"],
    "answer": "A‾－B",
    "explanation": "それぞれの演算をベン図で表す"
  },
  {
    "id": 2,
    "text": "組込みシステムにおけるリアルタイムシステムにおいて，システムへの入力に対する応答のうち，最も適切なものはどれか。",
    "count": 2,
    "choice": [
      "OSを使用しないで応答する。",
      "定められた制限時間内に応答する。",
      "入力された順序を守って応答する。",
      "入力時刻を記録して応答する。"
    ],
    "answer": "定められた制限時間内に応答する",
    "explanation": "リアルタイムシステム(Real-time System)は、使える資源(リソース)に限りがある状態で、ジョブの実行が命令された時、その処理を決められた時刻(デッドライン)までに終了することに着目した制御工学における概念の一つであり、「即時処理」とも呼ばれています。"
  },
  {
    "id": 3,
    "text": "先頭ポインタと末尾ポインタをもち，多くのデータがポインタでつながった単方向の線形リストの処理のうち，先頭ポインタ，末尾ポインタ又は各データのポインタをたどる回数が最も多いものはどれか。ここで，単方向のリストは先頭ポインタからつながっているものとし，追加するデータはポインタをたどらなくても参照できるものとする。",
    "count": 2,
    "choice": [
      "先頭にデータを追加する処理",
      "先頭のデータを削除する処理",
      "末尾にデータを追加する処理",
      "末尾のデータを削除する処理"
    ],
    "answer": "末尾のデータを削除する処理",
    "explanation": "リスト構造は、隣接するデータ同士をポインタで連結して表現するデータ構造です。"
  },
  {
    "id": 4,
    "text": "容量がaMバイトでアクセス時間がxナノ秒の命令キャッシュと，容量がbMバイトでアクセス時間がyナノ秒の主記憶をもつシステムにおいて，CPUからみた，主記憶と命令キャッシュとを合わせた平均アクセス時間を表す式はどれか。ここで，読み込みたい命令コードがキャッシュに存在しない確率をrとし，キャッシュメモリ管理に関するオーバヘッドは無視できるものとする。",
    "count": 2,
    "choice": [
      "(( 1-r ) * a / a+b )*x+( r*b / a+b )*y",
      "(1－r)・x＋r・y",
      "(( r*a ) / a+b )*x+(( 1-r )*b / a+b )*y",
      "r・x＋(1－r)・y"
    ],
    "answer": "(1－r)・x＋r・y",
    "explanation": "メモリの平均アクセス時間に関する問題は頻出です。この種の問題はメモリの容量を問題文にいれたり、存在しない確率をrとしてみたり、受験者を戸惑わせようとする目論見が見えますが、主記憶の平均アクセス時間の求め方は、キャッシュメモリのアクセス時間×ヒット率＋主記憶のアクセス時間×(1－ヒット率)なので、メモリの容量は関係ありません。ここで立式に係る値は次の4つです。キャッシュメモリのアクセス時間＝xヒット率＝存在しない確率の逆なので (1－r)主記憶のアクセス時間＝yヒットしない確率＝rこれを公式に代入すると「(1－r)・x＋r・y」になります。したがって「イ」が正解です。一般にキャッシュメモリ容量が大きくなればヒット率は上昇するはずです。したがってヒット率を計算するときにはキャッシュメモリと主記憶の容量が計算要素として使われることになります。しかしこの問題の場合は、ヒット率が定数として問題文の条件に示されているので、各メモリ容量を計算式に含める必要はない訳です。"
  },
  {
    "id": 5,
    "text": "1件のデータを処理する際に，読取りには40ミリ秒，CPU処理には30ミリ秒，書込みには50ミリ秒掛かるプログラムがある。このプログラムで，n件目の書込みと並行してn＋1件目のCPU処理とn＋2件目の読取りを実行すると，1分当たりの最大データ処理件数は幾つか。ここで，OSのオーバヘッドは考慮しないものとする。",
    "count": 4,
    "choice": ["500", "666", "750", "1200"],
    "answer": "1200",
    "explanation": "1分は「60秒×1,000ミリ秒＝60,000ミリ秒」なので、1分当たりの最大データ処理件数は、60,000ミリ秒÷50ミリ秒＝1,200件したがって「エ」の1,200件が適切です。"
  }
]
